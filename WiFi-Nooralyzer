#!/bin/sh

# Function to detect the correct wireless interface for scanning
detect_wireless_interface() {
    # Find a managed (client mode) interface that supports scanning
    INTERFACE=$(iw dev | awk '/Interface/ {iface=$2} /type managed/ {print iface; exit}')

    # If no managed interface is found, fall back to wlan0
    if [ -z "$INTERFACE" ]; then
        INTERFACE="wlan0"
    fi

    # Double-check that the selected interface exists
    if ! iw dev | grep -q "$INTERFACE"; then
        echo "‚ùå Error: No suitable wireless interface found for scanning. Exiting."
        exit 1
    fi

    echo "‚úÖ Using wireless interface for scanning: $INTERFACE"
}

# Function to check if the wireless interface is up
check_interface() {
    local iface=$1
    if ! ip link show "$iface" | grep -q "state UP"; then
        echo "‚ö†Ô∏è Wireless interface $iface is down. Bringing it up..."
        ip link set "$iface" up
        sleep 2
        if ! ip link show "$iface" | grep -q "state UP"; then
            echo "‚ùå Failed to bring up the wireless interface $iface. Exiting."
            exit 1
        fi
    fi
}

# Function to analyze wireless signal strength and interference
wireless_site_survey() {
    local iface=$1
    echo "üì° Step 1: Scanning nearby wireless networks..."

    # Ensure the interface is up
    check_interface "$iface"

    # Perform Wi-Fi scan
    iw dev "$iface" scan > /tmp/wireless_survey_results.txt 2>/dev/null

    if [ ! -s /tmp/wireless_survey_results.txt ]; then
        echo "‚ùå No scan results. Ensure the interface supports scanning and is not in AP mode."
        exit 1
    fi

    # Extract and format signal strength, SSID, and frequency
    echo ""
    echo "üì° Detected Wi-Fi Networks:"
    echo "--------------------------------------------------"
    echo "Signal Strength | Frequency  | SSID"
    echo "--------------------------------------------------"

    awk '/BSS/ {printf "\n"} 
         /signal:/ {printf "%-15s | ", $2 " dBm"} 
         /freq:/ {printf "%-10s | ", $2 " MHz"} 
         /SSID:/ {print substr($0, index($0,$2))}' /tmp/wireless_survey_results.txt

    echo ""
    echo "‚úÖ Wireless site survey completed."
}

# Main function
main() {
    echo "===== WiFi-Nooralyzer - Wireless Site Survey Tool ====="

    # Detect the best interface for scanning
    detect_wireless_interface

    # Run the wireless site survey function
    wireless_site_survey "$INTERFACE"
    
    echo "üèÅ Wireless site survey process completed."
}

# Execute the main function
main
